{
  "openapi": "3.0.0",
  "info": {
    "title": "Technical Support API",
    "version": "1.0.0",
    "description": "APIs for technical support operations including knowledge base queries, log analysis, and issue resolution."
  },
  "components": {
    "schemas": {
      "ErrorCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The error code identifier."
          },
          "name": {
            "type": "string",
            "description": "The name of the error."
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the error."
          },
          "resolution": {
            "type": "string",
            "description": "Steps to resolve the error."
          }
        }
      },
      "KnowledgeBaseItem": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the knowledge base item."
          },
          "content": {
            "type": "string",
            "description": "Content of the knowledge base item."
          },
          "category": {
            "type": "string",
            "description": "Category of the knowledge base item (e.g., SOP, Resolution, KB)."
          },
          "lastUpdated": {
            "type": "string",
            "description": "Date when the item was last updated."
          }
        }
      },
      "LogEntry": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the log entry."
          },
          "level": {
            "type": "string",
            "description": "Log level (INFO, WARN, ERROR, DEBUG)."
          },
          "service": {
            "type": "string",
            "description": "Service that generated the log."
          },
          "message": {
            "type": "string",
            "description": "Log message."
          },
          "requestId": {
            "type": "string",
            "description": "Request ID associated with the log."
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction ID associated with the log."
          }
        }
      },
      "Issue": {
        "type": "object",
        "properties": {
          "issueId": {
            "type": "string",
            "description": "Unique ID of the issue."
          },
          "title": {
            "type": "string",
            "description": "Title of the issue."
          },
          "description": {
            "type": "string",
            "description": "Description of the issue."
          },
          "status": {
            "type": "string",
            "description": "Status of the issue (Open, In Progress, Resolved)."
          },
          "errorCode": {
            "type": "string",
            "description": "Error code associated with the issue."
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp."
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update timestamp."
          }
        }
      },
      "Resolution": {
        "type": "object",
        "properties": {
          "issueId": {
            "type": "string",
            "description": "ID of the issue being resolved."
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Steps taken to resolve the issue."
          },
          "resolvedAt": {
            "type": "string",
            "description": "Timestamp when the issue was resolved."
          },
          "resolvedBy": {
            "type": "string",
            "description": "Person or system that resolved the issue."
          }
        }
      }
    }
  },
  "paths": {
    "/kb/search": {
      "post": {
        "summary": "Search knowledge base",
        "description": "Search the knowledge base for relevant information.",
        "operationId": "searchKnowledgeBase",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Search query."
                  },
                  "category": {
                    "type": "string",
                    "description": "Optional category to filter results (SOP, Resolution, KB)."
                  }
                },
                "required": ["query"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KnowledgeBaseItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. One or more required fields are missing or invalid."
          }
        }
      }
    },
    "/error-codes/{errorCode}": {
      "get": {
        "summary": "Get error code details",
        "description": "Get details about a specific error code.",
        "operationId": "getErrorCode",
        "parameters": [
          {
            "name": "errorCode",
            "in": "path",
            "description": "Error code to look up",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Error code details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Error code not found."
          }
        }
      }
    },
    "/logs/search": {
      "post": {
        "summary": "Search logs",
        "description": "Search logs for specific patterns or time periods.",
        "operationId": "searchLogs",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Search query."
                  },
                  "startTime": {
                    "type": "string",
                    "description": "Start time for log search (ISO format)."
                  },
                  "endTime": {
                    "type": "string",
                    "description": "End time for log search (ISO format)."
                  },
                  "logLevel": {
                    "type": "string",
                    "description": "Filter by log level (INFO, WARN, ERROR, DEBUG)."
                  },
                  "service": {
                    "type": "string",
                    "description": "Filter by service name."
                  },
                  "transactionId": {
                    "type": "string",
                    "description": "Filter by transaction ID."
                  }
                },
                "required": ["query"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Log search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogEntry"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. One or more required fields are missing or invalid."
          }
        }
      }
    },
    "/issues": {
      "get": {
        "summary": "Get all issues",
        "description": "Get a list of all issues.",
        "operationId": "getIssues",
        "responses": {
          "200": {
            "description": "List of issues",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new issue",
        "description": "Create a new issue in the system.",
        "operationId": "createIssue",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the issue."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the issue."
                  },
                  "errorCode": {
                    "type": "string",
                    "description": "Error code associated with the issue."
                  }
                },
                "required": ["title", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Issue created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issue"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. One or more required fields are missing or invalid."
          }
        }
      }
    },
    "/issues/{issueId}": {
      "get": {
        "summary": "Get issue details",
        "description": "Get details about a specific issue.",
        "operationId": "getIssue",
        "parameters": [
          {
            "name": "issueId",
            "in": "path",
            "description": "ID of the issue",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Issue details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issue"
                }
              }
            }
          },
          "404": {
            "description": "Issue not found."
          }
        }
      }
    },
    "/issues/{issueId}/resolve": {
      "post": {
        "summary": "Resolve an issue",
        "description": "Mark an issue as resolved with resolution steps.",
        "operationId": "resolveIssue",
        "parameters": [
          {
            "name": "issueId",
            "in": "path",
            "description": "ID of the issue to resolve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "steps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Steps taken to resolve the issue."
                  },
                  "resolvedBy": {
                    "type": "string",
                    "description": "Person or system that resolved the issue."
                  }
                },
                "required": ["steps"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Issue resolved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resolution"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. One or more required fields are missing or invalid."
          },
          "404": {
            "description": "Issue not found."
          }
        }
      }
    }
  }
}